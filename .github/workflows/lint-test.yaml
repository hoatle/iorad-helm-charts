name: Lint and Test Charts

on:
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.7.0

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.17

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0
        with:
          version: v3.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml

      - name: Create kind cluster
        uses: helm/kind-action@v1.8.0
        with:
          config: kind/kind-config.yaml
          version: v0.20.0
          # node_image: "kindest/node:v1.28.0"
        if: steps.list-changed.outputs.changed == 'true'

      - name: Login to Docker registries
        uses: teracyhq-incubator/.github/actions/docker-multiple-login-develop@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          gcr-json-key-base64: ${{ secrets.GCR_KEY_FILE_BASE64 }}

      - name: Load kind docker images
        run: |
          changed_list=$(ct list-changed --config ct.yaml)

          CLUSTER_NAME=chart-testing

          if [[ -n "$changed_list" ]]; then
              for i in "${changed_list[@]}"
              do
                  if  [[ $i == charts/* ]];
                  then
                      echo "$i";
                      find ./$i -name "autorun.sh" -exec chmod +x {} \; -exec {} $CLUSTER_NAME \; || true
                  fi
              done
          fi

          echo "kind get clusters"

          kind get clusters

          echo "kind get nodes --name $CLUSTER_NAME"

          kind get nodes --name $CLUSTER_NAME
        if: steps.list-changed.outputs.changed == 'true'
        env:
          K8S_NAMESPACE: "${{ env.K8S_NAMESPACE }}"

        # should create different k8s cluster versions
      - name: Run chart-testing (install)
        run: |
          ct install --namespace default --config ct.yaml
        timeout-minutes: 30
