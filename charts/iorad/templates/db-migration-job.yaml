{{- if .Values.migration.enabled -}}
{{- $fullname := include "iorad.fullname" . -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $fullname }}-db-migration
  labels:
    app.kubernetes.io/name: {{ include "iorad.name" . }}
    helm.sh/chart: {{ include "iorad.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,pre-upgrade
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
spec:
  template:
    metadata:
      name: {{ $fullname }}-db-migration
      labels:
        app.kubernetes.io/name: {{ include "iorad.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: {{ default "Never" .Values.migration.restartPolicy }}
      initContainers:
      - name: wait-for-db
        image: "mysql:{{ .Values.mysql.imageTag }}"
        command:
        - sh
        - -c
        - |
          set -ex
          # TODO(hoatle): retry + timeout support
          echo "Waiting for mysqld to be ready (accepting connections)"
          until mysql -h $MYSQL_HOST -u $MYSQL_USER -p${MYSQL_PASSWORD} -e "SELECT 1"; do sleep 5; done
        envFrom:
        - configMapRef:
            name: {{ $fullname }}-db
        - secretRef:
            name: {{ $fullname }}-db
      containers:
      - name: migration
        image: "{{ .Values.migration.repository }}:{{ .Values.migration.tag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.migration.pullPolicy }}
        {{- if .Values.migration.command }}
        command:
        - sh
        - -c
        - |
{{ .Values.migration.command | indent 10 }}
        {{- end }}
        {{- if .Values.migration.volumeMounts }}
        volumeMounts:
{{ toYaml .Values.migration.volumeMounts | indent 8 }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ $fullname }}-db
        - secretRef:
            name: {{ $fullname }}-db
        resources:
{{ toYaml .Values.migration.resources | indent 10 }}
      {{- with .Values.migration.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.migration.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.migration.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.migration.volumes }}
      volumes:
      {{- range .Values.migration.volumes }}
      {{- if .persistentVolumeClaim }}
      - name: {{ .name }}
        persistentVolumeClaim:
          {{- if .persistentVolumeClaim.existing }}
          claimName: {{ .persistentVolumeClaim.claimName }}
          {{- else }}
          claimName: {{ $fullname }}-{{ .persistentVolumeClaim.claimName }}
          {{- end }}
          readOnly: {{ default false .persistentVolumeClaim.readOnly }}
      {{- else }}
      - {{ . | toYaml | nindent 8 | trim }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
      {{- end }}
{{- end }}
