{{- $fullname := include "iorad-dev.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-app
  labels:
    app.kubernetes.io/name: {{ include "iorad-dev.name" . }}-app
    helm.sh/chart: {{ include "iorad-dev.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ default 1 .Values.app.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "iorad-dev.name" . }}-app
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "iorad-dev.name" . }}-app
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      - name: wait-for-src-and-build
        image: {{ .Values.app.image | quote }}
        imagePullPolicy: {{ .Values.app.pullPolicy }}
        workingDir: /opt/app
        command:
        - sh
        - -c
        - |
          FILE=./.src-copied

          echo "waiting for $FILE"

          until test -f "$FILE"; do
             sleep 3
          done

          echo "$FILE found!"

          # echo "cp -R -u -p /opt/node/. /opt/app"
          # cp -R -u -p /opt/node/. /opt/app
          # echo "cp done"

          echo "ls -al /opt/app"
          ls -al /opt/app

          echo "pwd"
          pwd

          npm install
          bower install --allow-root

          grunt templates
          grunt workers
          grunt build
        env:
        - name: NODE_ENV
          value: "development"
        volumeMounts:
        - mountPath: /opt/app
          name: storage
          subPath: iorad

      containers:
      - name: app
        image: {{ .Values.app.image | quote }}
        imagePullPolicy: {{ .Values.app.pullPolicy }}
        workingDir: /opt/app
        command:
        - sh
        - -c
        - |
          grunt watch:app
        env:
        - name: NODE_ENV
          value: "development"
        volumeMounts:
        - mountPath: /opt/app
          name: storage
          subPath: iorad
        {{- if .Values.app.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.app.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.app.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.app.readinessProbe | nindent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.app.resources | nindent 10 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.volumes }}
      volumes:
      {{- range .Values.volumes }}
      {{- if .persistentVolumeClaim }}
      - name: {{ .name }}
        persistentVolumeClaim:
          {{- if .persistentVolumeClaim.existing }}
          claimName: {{ .persistentVolumeClaim.claimName }}
          {{- else }}
          claimName: {{ $fullname }}-{{ .persistentVolumeClaim.claimName }}
          {{- end }}
          readOnly: {{ default false .persistentVolumeClaim.readOnly }}
      {{- else }}
      - {{ . | toYaml | nindent 8 | trim }}
      {{- end }}
      {{- end }}
    {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | nindent 6 }}
    {{- end }}
