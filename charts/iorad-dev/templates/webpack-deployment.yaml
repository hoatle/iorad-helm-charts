{{- $fullname := include "iorad-dev.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-webpack
  labels:
    app.kubernetes.io/name: {{ include "iorad-dev.name" . }}-webpack
    helm.sh/chart: {{ include "iorad-dev.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ default 1 .Values.webpack.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "iorad-dev.name" . }}-webpack
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "iorad-dev.name" . }}-webpack
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      - name: wait-for-node-src
        image: {{ .Values.dev.image | quote }}
        imagePullPolicy: {{ .Values.dev.pullPolicy }}
        workingDir: /opt/app
        command:
        - sh
        - -c
        - |
          FILE=/opt/app/node/.npm-installed

          echo "waiting for $FILE"

          until test -f "$FILE"; do
             sleep 3
          done

          echo "$FILE found!"
        env:
        volumeMounts:
        - mountPath: /opt/app
          name: storage
          subPath: iorad
      containers:
      - name: webpack
        image: {{ .Values.dev.image | quote }}
        imagePullPolicy: {{ .Values.dev.pullPolicy }}
        workingDir: /opt/app/node
        command:
        - sh
        - -c
        - |
          yarn run watch-client
        env:
        - name: NODE_ENV
          value: "development"
        - name: npm_config_tmp
          value: "/tmp"
        envFrom:
        - configMapRef:
            name: {{ $fullname }}
        - secretRef:
            name: {{ $fullname }}
        volumeMounts:
        - mountPath: /opt/app
          name: storage
          subPath: iorad
        - mountPath: /usr/local/share/.cache/yarn
          name: storage
          subPath: .cache-yarn
        ports:
        - name: webpack
          containerPort: {{ .Values.configMapEnv.WEBPACK_PORT }}
          protocol: TCP
        {{- if .Values.webpack.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.webpack.livenessProbe | indent 10 }}
        {{- end }}
        {{- if .Values.webpack.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.webpack.readinessProbe | indent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.webpack.resources | indent 10 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.volumes }}
      volumes:
      {{- range .Values.volumes }}
      {{- if .persistentVolumeClaim }}
      - name: {{ .name }}
        persistentVolumeClaim:
          {{- if .persistentVolumeClaim.existing }}
          claimName: {{ .persistentVolumeClaim.claimName }}
          {{- else }}
          claimName: {{ $fullname }}-{{ .persistentVolumeClaim.claimName }}
          {{- end }}
          readOnly: {{ default false .persistentVolumeClaim.readOnly }}
      {{- else }}
      - {{ . | toYaml | nindent 8 | trim }}
      {{- end }}
      {{- end }}
    {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
    {{- end }}
